# see feargen_Gaussian.txt for more details. This fits a simple Cosine curve, with amplitude and frequency parameters.

model {
	for (n in 1:tpoint) {
			y[n]  ~ dnorm( mu[n] , clusterTAUNOISE[ n2cluster[n]] )

			mu[n] <- amp[n2profile[n]]*cos((x[n])*freq[n2profile[n]]) + baseline[n2profile[n]]
	}

	for (np in 1:tprofile) {					
		amp[np] ~ dnorm( clusterAMPMU[profile2cluster[np]] , clusterAMPTAU[profile2cluster[np]] );
		#freq is modelled log-normal as it cannot be negative.
		# freq[np] ~ dlnorm( clusterFreqMU[profile2cluster[np]] , clusterFreqTAU[profile2cluster[np]] );		
		freq[np] ~ dnorm( clusterFreqMU[profile2cluster[np]] , clusterFreqTAU[profile2cluster[np]] );		
		baseline[np] ~ dnorm( clusterBaselineMU[profile2cluster[np]], clusterBaselineTAU[profile2cluster[np]] )
	}
			
	for (nc in 1:tcluster) {		
		#Model the noise variance
		# clusterTAUNOISE[nc] ~ dgamma(0.01,0.01) %recommended way in Kruschke.
		# 
		# Half-cauchy as in Gelman 2006 (http://www.stat.columbia.edu/~gelman/research/published/taumain.pdf)
  	# Scale parameter is 5, so precision of z = 1/5^2 = 0.04  	
  	tau_noise_z[nc] ~ dnorm(0, .0016)I(0,)
  	tau_noise_chSq[nc] ~ dgamma(0.5, 0.5)
  	tau_noise_sigma[nc] <- tau_noise_z[nc]/sqrt(tau_noise_chSq[nc]) # prior for sigma; cauchy = normal/sqrt(chi^2)
  	clusterTAUNOISE[nc] <- pow(tau_noise_sigma[nc],-2)		
  	
		#
		#Model the amplitude parameter. We impose a very vague prior with zero mean.
		clusterAMPMU[nc] ~ dnorm(0,1/10000)
		# I don't see any reason for hyper-hyper parameter modelling.
		# BrainAMPMu[nc]    ~ dunif(-5,5);
		# BrainAMPTAU[nc]   ~ dgamma(0.001,0.001) 		
		# clusterAMPTAU[nc] ~  dgamma(0.01,0.01) 
		# amptau_z[nc] ~ dnorm(0, .0016)I(0,)
  # 	amptau_chSq[nc] ~ dgamma(0.5, 0.5)
  # 	amptau_sigma[nc] <- amptau_z[nc]/sqrt(amptau_chSq[nc]) # prior for sigma; cauchy = normal/sqrt(chi^2)
  # 	clusterAMPTAU[nc] <- pow(amptau_sigma[nc],-2)
  	clusterAMPTAU[nc] ~ dgamma(0.1,0.1)I(0.0001,10000)
  	# clusterAMPTAU[nc] ~ dunif(0,10000)

  	#mu of the log-normal function
		# clusterFreqMU[nc]  ~ dunif(0, 1.5);
		clusterFreqMU[nc] ~ dnorm(2,10)
		# clusterFreqMU[nc] ~ dunif(-5 , 5);				
		# clusterFreqTAU[nc] ~ dgamma(0.01 , 0.01)I(0.0001,10000);
		# clusterFreqTAU[nc] ~ dunif(0,10000)
		clusterFreqTAU[nc] ~ dgamma(0.01,0.01)I(0.0001,10000)

		clusterBaselineMU[nc] ~ dnorm(0,1/1000000)
		clusterBaselineTAU[nc] ~ dgamma(0.01,0.01)I(0.0001,10000)

	}				
	# BrainFreqMU    ~ dunif(-5 , 5);
	# BrainFreqTAU   ~ dgamma(0.01,0.01)I(0.0001,10000) 		
}


		
